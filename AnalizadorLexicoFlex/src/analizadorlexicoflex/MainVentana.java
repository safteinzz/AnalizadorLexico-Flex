package analizadorlexicoflex;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.nio.file.Files;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author SaFteiNZz
 */
public class MainVentana extends javax.swing.JFrame {
    String ST;

    public MainVentana() {        
        initComponents(); 
        try {
            File file = new File(System.getProperty("user.dir")).getCanonicalFile();
            jTFflex.setText(file.getParent() + "\\AnalizadorLexicoFlex\\src\\analizadorlexicoflex\\Lexer.l"); 
            JTFEntrada.setText(file.getParent() + "\\AnalizadorLexicoFlex\\resources\\codigoinput1.txt");
        } catch (IOException ex) {            
            jTFflex.setText(System.getProperty("user.dir")); 
            JTFEntrada.setText(System.getProperty("user.dir"));
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTFflex = new javax.swing.JTextField();
        btnSelectFlex = new javax.swing.JButton();
        btnCrearFlex = new javax.swing.JButton();
        jLabelFlexStatus = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        JTFEntrada = new javax.swing.JTextField();
        btnBuscarArchivo = new javax.swing.JButton();
        btnAnalizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();
        jCheckBoxGuardar = new javax.swing.JCheckBox();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analizador Flex");

        btnSelectFlex.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnSelectFlex.setText("Seleccionar Archivo");
        btnSelectFlex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectFlexActionPerformed(evt);
            }
        });

        btnCrearFlex.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnCrearFlex.setText("Crear Flex");
        btnCrearFlex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearFlexActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jTFflex, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSelectFlex))
                    .addComponent(btnCrearFlex, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelFlexStatus)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFflex, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectFlex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCrearFlex, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabelFlexStatus)
                .addContainerGap(374, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Generar Flex", jPanel1);

        btnBuscarArchivo.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnBuscarArchivo.setText("Seleccionar Archivo");
        btnBuscarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarArchivoActionPerformed(evt);
            }
        });

        btnAnalizar.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnAnalizar.setText("Analizar");
        btnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarActionPerformed(evt);
            }
        });

        txtResultado.setEditable(false);
        txtResultado.setColumns(20);
        txtResultado.setRows(5);
        jScrollPane2.setViewportView(txtResultado);

        jCheckBoxGuardar.setText("Guardar");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(JTFEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                        .addGap(21, 21, 21)
                        .addComponent(btnBuscarArchivo))
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnAnalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxGuardar)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTFEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarArchivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAnalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addGap(7, 7, 7))
        );

        jTabbedPane1.addTab("Analizador", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generarLexer(String ruta){
        File archivo = new File(ruta);
        JFlex.Main.generate(archivo);
        jLabelFlexStatus.setText("Flex creado");
    }
    
    
    private boolean existeClase(String className) {
        try  {
            Class.forName(className);
            return true;
        }  catch (ClassNotFoundException e) {
            return false;
        }
    }
    
    private String sacarContent(String ruta){
        File archivo = new File(ruta);
        try {
            return new String(Files.readAllBytes(archivo.toPath()));               
        } catch (FileNotFoundException ex) {
            txtResultado.setText("No existe el archivo");
//            java.util.logging.Logger.getLogger(MainVentana.class.getName()).log(Level.SEVERE, null, ex);            
        } catch (IOException ex) {
            txtResultado.setText("No existe el archivo");
//            java.util.logging.Logger.getLogger(MainVentana.class.getName()).log(Level.SEVERE, null, ex);
        } 
        return null;
    } 
    
    /**
     * https://stackoverflow.com/questions/16846078/jfilechoosershowsavedialog-cant-get-the-value-of-the-extension-file-chosen
    * Returns the selected file from a JFileChooser, including the extension from
    * the file filter.
     * @param c el jfilechooser
     * @return el archivo con extension
    */
    public static File getSelectedFileWithExtension(JFileChooser c) {
        File file = c.getSelectedFile();
        if (c.getFileFilter() instanceof FileNameExtensionFilter) {
            String[] exts = ((FileNameExtensionFilter)c.getFileFilter()).getExtensions();
            String nameLower = file.getName().toLowerCase();
            for (String ext : exts) { // check if it already has a valid extension
                if (nameLower.endsWith('.' + ext.toLowerCase())) {
                    return file; // if yes, return as-is
                }
            }
            // if not, append the first extension from the selected filter
            file = new File(file.toString() + '.' + exts[0]);
        }
        return file;
    }
    
    /**
     * 
     * @param filtro
     * @param modo 1 = guardar, 0 = cargar
     * @return 
     */
    private String buscadorArchivo(FileNameExtensionFilter filtro, int modo) {
        JFileChooser explorador = new JFileChooser();
        if (filtro != null) 
        {
            explorador.addChoosableFileFilter(filtro);
            explorador.setAcceptAllFileFilterUsed(false);
        }
        
        int values;
        switch (modo) {
            case 0:
                values = explorador.showOpenDialog(null);
                if (values == JFileChooser.APPROVE_OPTION) {
                    File archivo = explorador.getSelectedFile();
                    if (archivo.exists())
                    {
                        return archivo.getAbsolutePath();
                    }            
                }
                break;
            case 1:
                values = explorador.showSaveDialog(null);
                if (values == JFileChooser.APPROVE_OPTION) {
                    File archivo = getSelectedFileWithExtension(explorador);
                    if (archivo != null) return archivo.getAbsolutePath();     
                }
                break; 
        }     
        return null;
    }
    
    private void btnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarActionPerformed
        int contador = 1;
        if (existeClase("analizadorlexicoflex.Lexer")) {  
            String contenido = sacarContent(JTFEntrada.getText());
            if (contenido == null) return;
            Lexer lexer = new Lexer(new StringReader(contenido));
            String resultado = "Linea " + contador + "\n-------------------------------\n";
            while (true) {
                Tokens tokens;
                try {
                    tokens = lexer.yylex();
                    if (tokens == null) {
                        if (jCheckBoxGuardar.isSelected()){
                            FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Documents(*.txt)", "txt");
                            String ruta = buscadorArchivo(filter, 1);
                            if (ruta == null)  return; 
                            File archivo = new File(ruta); 
                            PrintWriter escribir;
                            try {
                                escribir = new PrintWriter(archivo);
                                escribir.print(resultado);
                                escribir.close();
                            } catch (FileNotFoundException ex) {
                                java.util.logging.Logger.getLogger(MainVentana.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                        txtResultado.setText(resultado);                        
                        return;
                    }
                    switch (tokens) {
                        case ERROR:
                            resultado += "Simbolo no definido\n";
                            break;
                        case Linea:
                            contador++;
                            resultado += "\nLinea " + contador + "\n-------------------------------\n";
                            break; 
                        case Comentario:
                            resultado += "Comentarios\n";
                            break;
                        default:
                            resultado += "'" + lexer.lexeme + "' Es un " + tokens + "\n";
                            //resultado += "Token: " + tokens;
                            break;
                    }
                } catch (IOException ex) {
                    java.util.logging.Logger.getLogger(MainVentana.class.getName()).log(Level.SEVERE, null, ex);
                }
            }             
        }
        else{ 
            txtResultado.setText("Se necesita crear un flex antes");
        }
    }//GEN-LAST:event_btnAnalizarActionPerformed
    private void btnBuscarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarArchivoActionPerformed
        String ruta = buscadorArchivo(null, 0);
        if (ruta != null)  JTFEntrada.setText(ruta);        
    }//GEN-LAST:event_btnBuscarArchivoActionPerformed
    private void btnSelectFlexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectFlexActionPerformed
        FileNameExtensionFilter filter = new FileNameExtensionFilter("flex", "*.l");
        String ruta = buscadorArchivo(filter, 0);
        if (ruta != null) jTFflex.setText(ruta);
    }//GEN-LAST:event_btnSelectFlexActionPerformed
    private void btnCrearFlexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearFlexActionPerformed
        if (!existeClase("analizadorlexicoflex.Lexer")) generarLexer(jTFflex.getText());
        else jLabelFlexStatus.setText("Flex ya esta generado");
    }//GEN-LAST:event_btnCrearFlexActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainVentana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTFEntrada;
    private javax.swing.JButton btnAnalizar;
    private javax.swing.JButton btnBuscarArchivo;
    private javax.swing.JButton btnCrearFlex;
    private javax.swing.JButton btnSelectFlex;
    private javax.swing.JCheckBox jCheckBoxGuardar;
    private javax.swing.JLabel jLabelFlexStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTFflex;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea txtResultado;
    // End of variables declaration//GEN-END:variables
}
